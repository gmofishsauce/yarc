SYSCLK	READ/	YARC	UCCLK		WCS#		IRCLK	KSEL	RAMSEL		Notes
		WRITE#	NANO#

						ctl reg		xcvr		from	3 bits	3 bits		(meaning of signal)
						clock		enable		ucode	in ctl  in ctl

pulse	either	YARC	forbid		forbid		from	111		111			Normal operation - read RAM per
						(high)		(high)		ucode						cycle, write access to K and RAM
																			forbidden, RAMSEL inactived by
																			the 157s, K "SEL" inactivated by
																			Nano firmware.

pulse	RD		NANO#   forbid		low			forbid	111		0bb			Read slice bb from WCS RAM. No other
						(high)					(high)						read cases; YARC cannot make WCS#
																			low. Read address from IR, slot
																			clock, and slice from RAMSEL LSBs.

none	WR#		NANO#	pulse		low			forbid  inputs	inputs		Clocks the select register

pulse	WR#		NANO#	high		low			forbid	1xx		0bb			Write slice bb in WCS RAM

pulse	WR#		NANO#	high		low			forbid	0bb		1xx			Write K reg bb. Note: the K reg
																			is not readable on sysbus.

Operation
~~~~~~~~~

Call the 574 the Microcode Control Register (UCR) and call the pulse that clocks it UCCLK. Note that
UCCLK has nothing to do with SYSCLK; it's just a pulse from one the Nano's remaining pulse outputs.

At power on, the UCR, 193 outputs, and IRH are all random. The Nano writes 0x77 to the UCR which
disables both of the 139s so all the outputs from the 7432s on the board are all high, no write
clocks or pulses to the uCode RAMs or to the K register 574s.

When the Nano wants to write to either K or the RAM, it writes a pattern with either the 0x40 or
the 0x04 bit low (never both of them). The 0x40 bit enables the K register slice addressed by the
0x20 and 0x10 bit, while the 0x04 bit enables the RAM slices addressed by 0x02 and 0x01. We will
look at the two cases separately.

When the 0x40 bit is low, e.g. a pattern like 0x37, pin 9 is low on the 139, 4Y# (pin 12) is low
on the 157 in the control logic, and the next negative-going pulse on SYSCLK is reflected in 4Y
(pin 11) on the "northernmost" 7432. This clocks pin 11 of the north-western-most K register 574.

Next the Nano writes 0x77 to the UCR. THIS INVOLVES NO SYSCLK PULSE (this is what I keep forgetting!)
so it doesn't write to K or RAM. I think this will work.

Slot clock
~~~~~~~~~~

This requires a lot more verification. It reliease on the LOAD# signal to the counters, which is
IRCLK, "overriding" SYSCLK so there is no count behavior when the clock is loaded with 0x00. This
has to be carefully verified.

Control signals
~~~~~~~~~~~~~~~

SYSCLK, READ/WRITE#, YARC/NANO# - these already exist
UCCLK	- pulse output from one of the Nano's 138 decoder outputs
WCS#	- pulse output from one of the Nano's 138 decoder outputs
IRCLK	- from microcode, -maybe- OR'd with one of the Nano's decoder outputs (?) TBD
IRHRD#	- from microcode
IRLRD#	- from microcode

