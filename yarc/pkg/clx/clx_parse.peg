{
package clx
}

Input       ← Identifier EOL EOF
Identifier  ← [a-zA-Z] [a-zA-Z0-9]*         { log.Printf("identifier %s\n", c.text)
											  return newIdentifierNode(string(c.text)) }
_           ← [ \t]+						{ log.Printf("whitspace |%s|\n", c.text); return c, nil }
Comment     ← "//" [^\r\n]*					{ log.Printf("comment |%s|\n", c.text); return c, nil }
EOL         ← _? Comment? ("\r\n" / "\n\r" / "\r" / "\n" / EOF)
											// { log.Printf("EOL\n"); return c, nil }
EOF         ← !.							{ log.Printf("EOF.\n"); return c, nil }
